library(RSCORE)
library(RSCORE)
devtools::document()
install.packages(devtools)
install.packages('devtools')
library(devtools)
devtools::document()
devtools::document()
??unzip
devtools::document()
devtools::document()
library(RSCORE)
library(RSCORE)
vignette('SCENIC')
library(SCENIC)
library('SCENIC)
')'
)
)
''
library('SCENIC')
if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")
BiocManager::install(c("GENIE3", "AUCell", "RcisTarget"), version = "3.8")
# Also required:
install.packages('zoo')
# Recommended to run AUCell:
BiocManager::install(c("mixtools", "rbokeh"))
packageVersion("AUCell")
packageVersion("RcisTarget")
packageVersion("GENIE3")
BiocManager::install(c("GENIE3", "AUCell", "RcisTarget"))
packageVersion("AUCell")
packageVersion("RcisTarget")
packageVersion("GENIE3")
devtools::install_github("aertslab/SCENIC", ref="v1.1.0")
packageVersion("SCENIC")
getwd()
setwd('../../../data/example_rca/SCENIC_rca/SCENIC_rca/')
a<-readRDS('./int/tSNE_AUC_05pcs_50perpl.Rds')
plot(a$Y)
a<-readRDS('./int/tSNE_AUC_15pcs_15perpl.Rds')
plot(a$Y)
# Plot as pdf (individual files in int/):
fileNames <- paste0("int/",grep(".Rds", grep("tSNE_", list.files("int"), value=T), value=T))
plotTsne_compareSettings(fileNames, scenicOptions, showLegend=FALSE)
library(SCENIC)
plotTsne_compareSettings(fileNames, scenicOptions, showLegend=FALSE)
readRDS('.RData')
getwd()
getwd()
library(RSCORE)
library(RSCORE)
library(RSCORE)
library(RSCORE)
devtools::document()
devtools::use_vignette()
devtools::use_vignette("Introduction and Tutorials")
devtools::use_vignette("RSCORE_Tutorials")
help("Deprecated")
usethis::use_vignette()
usethis::use_vignette("RSCORE_Tutorials")
getwd()
system.file("inst/extdata/".'GSE81861_Cell_Line_COUNT.csv',package = 'RSCORE')
system.file("inst/extdata/",'GSE81861_Cell_Line_COUNT.csv',package = 'RSCORE')
library(RSCORE)
system.file("inst/extdata/",'GSE81861_Cell_Line_COUNT.csv',package = 'RSCORE')
help("library")
library(RSCORE)
library(RSCORE)
RCA_count <- read.csv("../inst/extdata/GSE81861_Cell_Line_COUNT.csv", header=T, row.names = 1)
row_names <- strsplit(row.names(RCA_count), '_')
gene_names <- c()
for (i in 1:length(row_names)){
temp = unlist(row_names[i])
gene_names[i] = temp[2]
}
row.names(RCA_count) <- make.names(gene_names, unique=TRUE)
RCA_seurat <- CreateSeuratObject(counts = RCA_count, min.cells = 10, min.features = 1000,
names.field = 3, names.delim = '_',
assay = 'RNA', project = 'RCA')
library(RSCORE)
RCA_count <- read.csv("../inst/extdata/GSE81861_Cell_Line_COUNT.csv", header=T, row.names = 1)
row_names <- strsplit(row.names(RCA_count), '_')
gene_names <- c()
for (i in 1:length(row_names)){
temp = unlist(row_names[i])
gene_names[i] = temp[2]
}
row.names(RCA_count) <- make.names(gene_names, unique=TRUE)
RCA_seurat <- CreateSeuratObject(counts = RCA_count, min.cells = 10, min.features = 1000,
names.field = 3, names.delim = '_',
assay = 'RNA', project = 'RCA')
library(RSCORE)
library(Seurat)
RCA_count <- read.csv("../inst/extdata/GSE81861_Cell_Line_COUNT.csv", header=T, row.names = 1)
row_names <- strsplit(row.names(RCA_count), '_')
gene_names <- c()
for (i in 1:length(row_names)){
temp = unlist(row_names[i])
gene_names[i] = temp[2]
}
row.names(RCA_count) <- make.names(gene_names, unique=TRUE)
RCA_seurat <- CreateSeuratObject(counts = RCA_count, min.cells = 10, min.features = 1000,
names.field = 3, names.delim = '_',
assay = 'RNA', project = 'RCA')
hs_network <- as.matrix(readRDS('./inst/extdata/hs_network_matrix_Biogrid-3.5.172.Rda'))
hs_network <- as.matrix(readRDS('../inst/extdata/hs_network_matrix_Biogrid-3.5.172.Rda'))
RCA_seurat <- R.SCORE(Data = RCA_seurat, PPI = 'String', species = 9606)
library(RSCORE)
library(Seurat)
library(igraph)
RCA_seurat <- R.SCORE(Data = RCA_seurat, PPI = 'String', species = 9606)
RCA_seurat <- R.SCORE(Data = RCA_seurat, PPI = hs_network, species = 9606)
