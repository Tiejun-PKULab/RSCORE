system.file("inst/extdata/".'GSE81861_Cell_Line_COUNT.csv',package = 'RSCORE')
system.file("inst/extdata/",'GSE81861_Cell_Line_COUNT.csv',package = 'RSCORE')
library(RSCORE)
system.file("inst/extdata/",'GSE81861_Cell_Line_COUNT.csv',package = 'RSCORE')
help("library")
library(RSCORE)
library(RSCORE)
RCA_count <- read.csv("../inst/extdata/GSE81861_Cell_Line_COUNT.csv", header=T, row.names = 1)
row_names <- strsplit(row.names(RCA_count), '_')
gene_names <- c()
for (i in 1:length(row_names)){
temp = unlist(row_names[i])
gene_names[i] = temp[2]
}
row.names(RCA_count) <- make.names(gene_names, unique=TRUE)
RCA_seurat <- CreateSeuratObject(counts = RCA_count, min.cells = 10, min.features = 1000,
names.field = 3, names.delim = '_',
assay = 'RNA', project = 'RCA')
library(RSCORE)
RCA_count <- read.csv("../inst/extdata/GSE81861_Cell_Line_COUNT.csv", header=T, row.names = 1)
row_names <- strsplit(row.names(RCA_count), '_')
gene_names <- c()
for (i in 1:length(row_names)){
temp = unlist(row_names[i])
gene_names[i] = temp[2]
}
row.names(RCA_count) <- make.names(gene_names, unique=TRUE)
RCA_seurat <- CreateSeuratObject(counts = RCA_count, min.cells = 10, min.features = 1000,
names.field = 3, names.delim = '_',
assay = 'RNA', project = 'RCA')
library(RSCORE)
library(Seurat)
RCA_count <- read.csv("../inst/extdata/GSE81861_Cell_Line_COUNT.csv", header=T, row.names = 1)
row_names <- strsplit(row.names(RCA_count), '_')
gene_names <- c()
for (i in 1:length(row_names)){
temp = unlist(row_names[i])
gene_names[i] = temp[2]
}
row.names(RCA_count) <- make.names(gene_names, unique=TRUE)
RCA_seurat <- CreateSeuratObject(counts = RCA_count, min.cells = 10, min.features = 1000,
names.field = 3, names.delim = '_',
assay = 'RNA', project = 'RCA')
hs_network <- as.matrix(readRDS('./inst/extdata/hs_network_matrix_Biogrid-3.5.172.Rda'))
hs_network <- as.matrix(readRDS('../inst/extdata/hs_network_matrix_Biogrid-3.5.172.Rda'))
RCA_seurat <- R.SCORE(Data = RCA_seurat, PPI = 'String', species = 9606)
library(RSCORE)
library(Seurat)
library(igraph)
RCA_seurat <- R.SCORE(Data = RCA_seurat, PPI = 'String', species = 9606)
RCA_seurat <- R.SCORE(Data = RCA_seurat, PPI = hs_network, species = 9606)
devtools::build()
library(RSCORE)
devtools::document()
library(RSCORE)
library(RSCORE)
devtools::document()
devtools::document()
devtools::document()
library(RSCORE)
devtools::install_github('wycwycpku/RSCORE', build_opts = NULL)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RSCORE)
library(Seurat)
library(igraph)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(RSCORE)
library(Seurat)
library(igraph)
# change the directory to yours
RCA_count <- read.csv("../inst/extdata/GSE81861_Cell_Line_COUNT.csv", header=T, row.names = 1)
row_names <- strsplit(row.names(RCA_count), '_')
gene_names <- c()
for (i in 1:length(row_names)){
temp = unlist(row_names[i])
gene_names[i] = temp[2]
}
row.names(RCA_count) <- make.names(gene_names, unique=TRUE)
RCA_seurat <- CreateSeuratObject(counts = RCA_count, min.cells = 10, min.features = 1000,
names.field = 3, names.delim = '_',
assay = 'RNA', project = 'RCA')
library(RSCORE)
library(Seurat)
library(igraph)
# change the directory to yours
RCA_count <- read.csv("../inst/extdata/GSE81861_Cell_Line_COUNT.csv", header=T, row.names = 1)
row_names <- strsplit(row.names(RCA_count), '_')
gene_names <- c()
for (i in 1:length(row_names)){
temp = unlist(row_names[i])
gene_names[i] = temp[2]
}
row.names(RCA_count) <- make.names(gene_names, unique=TRUE)
RCA_seurat <- CreateSeuratObject(counts = RCA_count, min.cells = 10, min.features = 1000,
names.field = 3, names.delim = '_',
assay = 'RNA', project = 'RCA')
RCA_seurat <- R.SCORE(Data = RCA_seurat, PPI = hs_network)
# change the directory to yours
hs_network <- as.matrix(readRDS('../inst/extdata/hs_network_matrix_Biogrid-3.5.172.Rda'))
RCA_seurat <- R.SCORE(Data = RCA_seurat, PPI = hs_network)
library(RSCORE)
library(Seurat)
library(igraph)
# change the directory to yours
RCA_count <- read.csv("../inst/extdata/GSE81861_Cell_Line_COUNT.csv", header=T, row.names = 1)
row_names <- strsplit(row.names(RCA_count), '_')
gene_names <- c()
for (i in 1:length(row_names)){
temp = unlist(row_names[i])
gene_names[i] = temp[2]
}
row.names(RCA_count) <- make.names(gene_names, unique=TRUE)
RCA_seurat <- CreateSeuratObject(counts = RCA_count, min.cells = 10, min.features = 1000,
names.field = 3, names.delim = '_',
assay = 'RNA', project = 'RCA')
RCA_seurat <- subset(RCA_seurat, subset = nCount_RNA > 10000)
RCA_seurat <- NormalizeData(RCA_seurat, normalization.method = "LogNormalize", scale.factor = 100000)
RCA_seurat <- ScaleData(object = RCA_seurat)
RCA_seurat <- FindVariableFeatures(object = RCA_seurat, selection.method = 'vst', nfeatures = 5000)
RCA_seurat <- R.SCORE(Data = RCA_seurat, PPI = hs_network)
devtools::install_github('wycwycpku/RSCORE', build_opts = NULL)
getwd()
library(RSCORE)
library(RSCORE)
library(RSCORE)
getwd()
library(RSCORE)
setwd('../../../data/example_rca_V2/')
help(AUCell_buildingRankings)
library(AUCell)
help(AUCell_buildingRankings)
help("AUCell_buildRankings")
help("AUCell_calcAUC")
library(RSCORE)
devtools::document()
devtools::document()
library(devtools)
devtools::document()
library(RSCORE)
devtools::document()
devtools::document()
library(RSCORE)
devtools::document()
library(RSCORE)
devtools::document()
warnings()
library(RSCORE)
library(RSCORE)
devtools
devtools::document()
library(RSCORE)
library(RSCORE)
library(RSCORE)
library(RSCORE)
devtools::document()
library(RSCORE)
system.file('extdata','GSE.csv',package = 'RSCORE')
system.file('extdata','GSE.csv',package = 'RSCORE')
system.file('extdata','GSE81861_Cell_Line_FPKM.csv',package = 'RSCORE')
devtools::document()
library(RSCORE)
devtools::document()
library(RSCORE)
library(RSCORE)
library(Seurat)
library(igraph)
PlotSteinertree(RCA_seurat, ident = 'IMR90')
library(RSCORE)
library(Seurat)
library(igraph)
# change the directory to yours
RCA_count <- read.csv(system.file('extdata','GSE81861_Cell_Line_FPKM.csv',package = 'RSCORE'), header=T, row.names = 1)
# change the directory to yours
RCA_count <- read.csv(system.file('extdata','GSE81861_Cell_Line_FPKM.csv',package = 'RSCORE'), header=T, row.names = 1)
RCA_count <- log(RCA_count+1, 2)
row_names <- strsplit(row.names(RCA_count), '_')
gene_names <- c()
for (i in 1:length(row_names)){
temp = unlist(row_names[i])
gene_names[i] = temp[2]
}
row.names(RCA_count) <- make.names(gene_names, unique=TRUE)
RCA_seurat <- CreateSeuratObject(counts = RCA_count, min.cells = 10, min.features = 1000,
names.field = 3, names.delim = '_',
assay = 'RNA', project = 'RCA')
RCA_seurat <- ScaleData(object = RCA_seurat)
RCA_seurat <- ScaleData(object = RCA_seurat)
RCA_seurat <- FindVariableFeatures(object = RCA_seurat, selection.method = 'vst', nfeatures = 5000)
# change the directory to yours
hs_network <- as.matrix(readRDS(system.file('extdata','hs_network_matrix_Biogrid-3.5.173.Rda',package = 'RSCORE')))
RCA_seurat <- R.SCORE(Data = RCA_seurat, PPI = hs_network)
PlotSteinertree(RCA_seurat, ident = 'IMR90')
RCA_seurat
PlotSteinertree(RCA_seurat,ident='IMR90')
save(RCA_seurat, file = 'temp.Rdata')
devtools::document()
devtools::document()
devtools::document()
help(rowMeans)
devtools::document()
devtools::install_github('wycwycpku/RSCORE')
devtools::document()
devtools::document()
library(RSCORE)
devtools::document()
devtools::document()
library(RSCORE)
library(RSCORE)
library(Seurat)
library(igraph)
library(R.utils)
# change the directory to yours
# You need to download the data firstly.
# download.file('https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE81861&format=file&file=GSE81861%5FCell%5FLine%5FFPKM%2Ecsv%2Egz', destfile = 'RCA_FPKM.csv.gz')
# gunzip('RCA_FPKM.csv.gz', 'RCA_FPKM.csv')
RCA_count <- read.csv('RCA_FPKM.csv', header=T, row.names = 1)
# change the directory to yours
# You need to download the data firstly.
# download.file('https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE81861&format=file&file=GSE81861%5FCell%5FLine%5FFPKM%2Ecsv%2Egz', destfile = 'RCA_FPKM.csv.gz')
# gunzip('RCA_FPKM.csv.gz', 'RCA_FPKM.csv')
RCA_count <- read.csv('RCA_FPKM.csv', header=T, row.names = 1)
RCA_count <- log(RCA_count+1, 2)
RCA_count <- log(RCA_count+1, 2)
row_names <- strsplit(row.names(RCA_count), '_')
gene_names <- c()
for (i in 1:length(row_names)){
temp = unlist(row_names[i])
gene_names[i] = temp[2]
}
row.names(RCA_count) <- make.names(gene_names, unique=TRUE)
RCA_seurat <- CreateSeuratObject(counts = RCA_count, min.cells = 10, min.features = 1000,
names.field = 3, names.delim = '_',
assay = 'RNA', project = 'RCA')
RCA_seurat <- ScaleData(object = RCA_seurat)
RCA_seurat <- ScaleData(object = RCA_seurat)
RCA_seurat <- FindVariableFeatures(object = RCA_seurat, selection.method = 'vst', nfeatures = 8000)
# change the directory to yours
hs_network <- as.matrix(readRDS(system.file('extdata','hs_network_matrix_Biogrid-3.5.173.Rda',package = 'RSCORE')))
RCA_seurat <- R.SCORE(Data = RCA_seurat, PPI = hs_network)
VariableFeatures(RCA_seurat) <- rownames(RCA_seurat)
RCA_seurat <- RunPCA(RCA_seurat, features = rownames(RCA_seurat), npcs = 30, reduction.name = "NetPCA",
reduction.key = "NetPCA_", verbose = F)
DimPlot(RCA_seurat, reduction = 'NetTSNE', pt.size = 3, group.by = 'orig.ident')
RCA_seurat <- RunTSNE(RCA_seurat, reduction = "NetPCA", dims = 1:10,
reduction.name = "NetTSNE",  reduction.key = "NetTSNE_")
DimPlot(RCA_seurat, reduction = 'NetTSNE', pt.size = 3, group.by = 'orig.ident')
dim(hs_network)
DefaultAssay(RCA_seurat) =- 'RNA'
DefaultAssay(RCA_seurat) = 'RNA'
RCA_seurat <- R.SCORE(Data = RCA_seurat, PPI = hs_network)
DefaultAssay(RCA_seurat) = 'RNA'
RCA_seurat <- FindVariableFeatures(object = RCA_seurat, selection.method = 'vst', nfeatures = 11000)
# change the directory to yours
hs_network <- as.matrix(readRDS(system.file('extdata','hs_network_matrix_Biogrid-3.5.173.Rda',package = 'RSCORE')))
RCA_seurat <- R.SCORE(Data = RCA_seurat, PPI = hs_network)
VariableFeatures(RCA_seurat) <- rownames(RCA_seurat)
RCA_seurat <- RunPCA(RCA_seurat, features = rownames(RCA_seurat), npcs = 30, reduction.name = "NetPCA",
reduction.key = "NetPCA_", verbose = F)
RCA_seurat <- RunTSNE(RCA_seurat, reduction = "NetPCA", dims = 1:10,
reduction.name = "NetTSNE",  reduction.key = "NetTSNE_")
DimPlot(RCA_seurat, reduction = 'NetTSNE', pt.size = 3, group.by = 'orig.ident')
# change the directory to yours
# You need to download the data firstly.
download.file('https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE81861&format=file&file=GSE81861%5FCell%5FLine%5FFPKM%2Ecsv%2Egz', destfile = 'RCA_FPKM.csv.gz')
gunzip('RCA_FPKM.csv.gz', 'RCA_FPKM.csv')
RCA_count <- read.csv('RCA_FPKM.csv', header=T, row.names = 1)
RCA_count <- log(RCA_count+1, 2)
row_names <- strsplit(row.names(RCA_count), '_')
gene_names <- c()
for (i in 1:length(row_names)){
temp = unlist(row_names[i])
gene_names[i] = temp[2]
}
row.names(RCA_count) <- make.names(gene_names, unique=TRUE)
RCA_seurat <- CreateSeuratObject(counts = RCA_count, min.cells = 10, min.features = 1000,
names.field = 3, names.delim = '_',
assay = 'RNA', project = 'RCA')
RCA_seurat <- ScaleData(object = RCA_seurat)
RCA_seurat <- FindVariableFeatures(object = RCA_seurat, selection.method = 'vst', nfeatures = 8000)
# change the directory to yours
hs_network <- as.matrix(readRDS(system.file('extdata','hs_network_matrix_Biogrid-3.5.173.Rda',package = 'RSCORE')))
RCA_seurat <- R.SCORE(Data = RCA_seurat, PPI = hs_network)
VariableFeatures(RCA_seurat) <- rownames(RCA_seurat)
RCA_seurat <- RunPCA(RCA_seurat, features = rownames(RCA_seurat), npcs = 30, reduction.name = "NetPCA",
reduction.key = "NetPCA_", verbose = F)
RCA_seurat <- RunTSNE(RCA_seurat, reduction = "NetPCA", dims = 1:10,
reduction.name = "NetTSNE",  reduction.key = "NetTSNE_")
DimPlot(RCA_seurat, reduction = 'NetTSNE', pt.size = 3, group.by = 'orig.ident')
library(dplyr)
library(genesorteR)
SCORE_DEGs_list <- Find_Markers(object = RCA_seurat, assay = 'RNA', FoldChange = 1.5)
SCORE_DAMs_list <- Find_Markers(object = RCA_seurat, assay = 'Net', FoldChange = 1.5)
#Select the top n markers of each cluster
top10_DEGs <- SCORE_DEGs_list$Markers %>% group_by(Cluster) %>% top_n(n = 10, wt = Gene.Score)
top10_DAMs <- SCORE_DAMs_list$Markers %>% group_by(Cluster) %>% top_n(n = 10, wt = Gene.Score)
#genesorteR plotMarkerHeat function
plotMarkerHeat(exp = SCORE_DEGs_list$GeneSort$inputMat,
classes = SCORE_DEGs_list$GeneSort$inputClass,
markers = top10_DEGs$Marker,
clusterGenes = FALSE,
averageCells = 1)
plotMarkerHeat(exp = SCORE_DAMs_list$GeneSort$inputMat,
classes = SCORE_DAMs_list$GeneSort$inputClass,
markers = top10_DAMs$Marker,
clusterGenes = FALSE,
averageCells = 1)
ident <- 'A549'
DEGs <- SCORE_DEGs_list$Markers[SCORE_DEGs_list$Markers$Cluster==ident,]$Marker
DAMs <- SCORE_DAMs_list$Markers[SCORE_DAMs_list$Markers$Cluster==ident,]$Marker
DAMGs <- unique(rownames(table(unlist(RCA_seurat@misc$geneSets[DAMs]))))
geneset1 <- DEGs[DEGs %in% genes_in_connected_set]
ident <- 'A549'
DEGs <- SCORE_DEGs_list$Markers[SCORE_DEGs_list$Markers$Cluster==ident,]$Marker
DAMs <- SCORE_DAMs_list$Markers[SCORE_DAMs_list$Markers$Cluster==ident,]$Marker
DAMGs <- unique(rownames(table(unlist(RCA_seurat@misc$geneSets[DAMs]))))
PlotSteinertree(RCA_seurat, geneset1 = DEGs, geneset2 = DAMGs)
rm(list = ls())
library(RSCORE)
help("as.hclust")
help(cutree)
help(convex_hull)
??convex_hull
igraph::convex_hull()
help(convex_hull)
help(cutree)
help("as.hclust")
help("findInterval")
library(Seurat)
help("FindClusters")
help(hclust)
devtools::document()
library(RSCORE)
library(RSCORE)
library(Seurat)
library(igraph)
library(R.utils)
library(RSCORE)
library(Seurat)
library(igraph)
library(R.utils)
# change the directory to yours
# You need to download the data firstly.
# download.file('https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE81861&format=file&file=GSE81861%5FCell%5FLine%5FFPKM%2Ecsv%2Egz', destfile = 'RCA_FPKM.csv.gz')
# gunzip('RCA_FPKM.csv.gz', 'RCA_FPKM.csv')
RCA_count <- read.csv('RCA_FPKM.csv', header=T, row.names = 1)
RCA_count <- log(RCA_count+1, 2)
row_names <- strsplit(row.names(RCA_count), '_')
gene_names <- c()
for (i in 1:length(row_names)){
temp = unlist(row_names[i])
gene_names[i] = temp[2]
}
row.names(RCA_count) <- make.names(gene_names, unique=TRUE)
RCA_seurat <- CreateSeuratObject(counts = RCA_count, min.cells = 10, min.features = 1000,
names.field = 3, names.delim = '_',
assay = 'RNA', project = 'RCA')
RCA_seurat <- ScaleData(object = RCA_seurat)
RCA_seurat <- FindVariableFeatures(object = RCA_seurat, selection.method = 'vst', nfeatures = 8000)
# change the directory to yours
hs_network <- as.matrix(readRDS(system.file('extdata','9606_ppi_matrix_BioGRID-3.5.173.Rda',package = 'RSCORE')))
RCA_seurat <- R.SCORE(Data = RCA_seurat, PPI = hs_network)
VariableFeatures(RCA_seurat) <- rownames(RCA_seurat)
RCA_seurat <- RunPCA(RCA_seurat, features = rownames(RCA_seurat), npcs = 30, reduction.name = "NetPCA",
reduction.key = "NetPCA_", verbose = F)
RCA_seurat <- RunTSNE(RCA_seurat, reduction = "NetPCA", dims = 1:10,
reduction.name = "NetTSNE",  reduction.key = "NetTSNE_")
DimPlot(RCA_seurat, reduction = 'NetTSNE', pt.size = 3, group.by = 'orig.ident')
library(dplyr)
library(genesorteR)
SCORE_DEGs_list <- Find_Markers(object = RCA_seurat, assay = 'RNA', FoldChange = 1.5)
SCORE_DAMs_list <- Find_Markers(object = RCA_seurat, assay = 'Net', FoldChange = 1.5)
#Select the top n markers of each cluster
top10_DEGs <- SCORE_DEGs_list$Markers %>% group_by(Cluster) %>% top_n(n = 10, wt = Gene.Score)
top10_DAMs <- SCORE_DAMs_list$Markers %>% group_by(Cluster) %>% top_n(n = 10, wt = Gene.Score)
#genesorteR plotMarkerHeat function
plotMarkerHeat(exp = SCORE_DEGs_list$GeneSort$inputMat,
classes = SCORE_DEGs_list$GeneSort$inputClass,
markers = top10_DEGs$Marker,
clusterGenes = FALSE,
averageCells = 1)
plotMarkerHeat(exp = SCORE_DAMs_list$GeneSort$inputMat,
classes = SCORE_DAMs_list$GeneSort$inputClass,
markers = top10_DAMs$Marker,
clusterGenes = FALSE,
averageCells = 1)
ident <- 'A549'
DEGs <- SCORE_DEGs_list$Markers[SCORE_DEGs_list$Markers$Cluster==ident,]$Marker
DAMs <- SCORE_DAMs_list$Markers[SCORE_DAMs_list$Markers$Cluster==ident,]$Marker
DAMGs <- unique(rownames(table(unlist(RCA_seurat@misc$geneSets[DAMs]))))
st_res <- PlotSteinertree(RCA_seurat, geneset1 = DEGs, geneset2 = DAMGs)
print(st_res$plot)
st_res <- cut_steiner_tree(st_res, k = 7)
ident <- 'A549'
DEGs <- SCORE_DEGs_list$Markers[SCORE_DEGs_list$Markers$Cluster==ident,]$Marker
DAMs <- SCORE_DAMs_list$Markers[SCORE_DAMs_list$Markers$Cluster==ident,]$Marker
DAMGs <- unique(rownames(table(unlist(RCA_seurat@misc$geneSets[DAMs]))))
st_res <- PlotSteinertree(RCA_seurat, geneset1 = DEGs, geneset2 = DAMGs)
print(st_res$plot)
devtools::document()
library(RSCORE)
library(Seurat)
library(igraph)
library(R.utils)
# change the directory to yours
# You need to download the data firstly.
# download.file('https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE81861&format=file&file=GSE81861%5FCell%5FLine%5FFPKM%2Ecsv%2Egz', destfile = 'RCA_FPKM.csv.gz')
# gunzip('RCA_FPKM.csv.gz', 'RCA_FPKM.csv')
RCA_count <- read.csv('RCA_FPKM.csv', header=T, row.names = 1)
RCA_count <- log(RCA_count+1, 2)
row_names <- strsplit(row.names(RCA_count), '_')
gene_names <- c()
for (i in 1:length(row_names)){
temp = unlist(row_names[i])
gene_names[i] = temp[2]
}
row.names(RCA_count) <- make.names(gene_names, unique=TRUE)
RCA_seurat <- CreateSeuratObject(counts = RCA_count, min.cells = 10, min.features = 1000,
names.field = 3, names.delim = '_',
assay = 'RNA', project = 'RCA')
# change the directory to yours
# You need to download the data firstly.
# download.file('https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE81861&format=file&file=GSE81861%5FCell%5FLine%5FFPKM%2Ecsv%2Egz', destfile = 'RCA_FPKM.csv.gz')
# gunzip('RCA_FPKM.csv.gz', 'RCA_FPKM.csv')
RCA_count <- read.csv('RCA_FPKM.csv', header=T, row.names = 1)
RCA_count <- log(RCA_count+1, 2)
row_names <- strsplit(row.names(RCA_count), '_')
gene_names <- c()
for (i in 1:length(row_names)){
temp = unlist(row_names[i])
gene_names[i] = temp[2]
}
row.names(RCA_count) <- make.names(gene_names, unique=TRUE)
RCA_seurat <- CreateSeuratObject(counts = RCA_count, min.cells = 10, min.features = 1000,
names.field = 3, names.delim = '_',
assay = 'RNA', project = 'RCA')
library(RSCORE)
library(Seurat)
library(igraph)
library(R.utils)
# change the directory to yours
# You need to download the data firstly.
# download.file('https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE81861&format=file&file=GSE81861%5FCell%5FLine%5FFPKM%2Ecsv%2Egz', destfile = 'RCA_FPKM.csv.gz')
# gunzip('RCA_FPKM.csv.gz', 'RCA_FPKM.csv')
RCA_count <- read.csv('RCA_FPKM.csv', header=T, row.names = 1)
RCA_count <- log(RCA_count+1, 2)
row_names <- strsplit(row.names(RCA_count), '_')
gene_names <- c()
for (i in 1:length(row_names)){
temp = unlist(row_names[i])
gene_names[i] = temp[2]
}
row.names(RCA_count) <- make.names(gene_names, unique=TRUE)
RCA_seurat <- CreateSeuratObject(counts = RCA_count, min.cells = 10, min.features = 1000,
names.field = 3, names.delim = '_',
assay = 'RNA', project = 'RCA')
RCA_seurat <- ScaleData(object = RCA_seurat)
RCA_seurat <- FindVariableFeatures(object = RCA_seurat, selection.method = 'vst', nfeatures = 8000)
# change the directory to yours
hs_network <- as.matrix(readRDS(system.file('extdata','9606_ppi_matrix_BioGRID-3.5.173.Rda',package = 'RSCORE')))
# hs_network <- getPPI_String(Data = RCA_seurat, species = 9606, version = '10')
# or
# hs_network <- getPPI_Biogrid(Data = RCA_seurat, species = 9606, version = '3.5.173')
RCA_seurat <- R.SCORE(Data = RCA_seurat, PPI = hs_network)
VariableFeatures(RCA_seurat) <- rownames(RCA_seurat)
RCA_seurat <- RunPCA(RCA_seurat, features = rownames(RCA_seurat), npcs = 30, reduction.name = "NetPCA",
reduction.key = "NetPCA_", verbose = F)
RCA_seurat <- RunTSNE(RCA_seurat, reduction = "NetPCA", dims = 1:10,
reduction.name = "NetTSNE",  reduction.key = "NetTSNE_")
DimPlot(RCA_seurat, reduction = 'NetTSNE', pt.size = 3, group.by = 'orig.ident')
library(dplyr)
library(genesorteR)
SCORE_DEGs_list <- Find_Markers(object = RCA_seurat, assay = 'RNA', FoldChange = 1.5)
SCORE_DAMs_list <- Find_Markers(object = RCA_seurat, assay = 'Net', FoldChange = 1.5)
#Select the top n markers of each cluster
top10_DEGs <- SCORE_DEGs_list$Markers %>% group_by(Cluster) %>% top_n(n = 10, wt = Gene.Score)
top10_DAMs <- SCORE_DAMs_list$Markers %>% group_by(Cluster) %>% top_n(n = 10, wt = Gene.Score)
#genesorteR plotMarkerHeat function
plotMarkerHeat(exp = SCORE_DEGs_list$GeneSort$inputMat,
classes = SCORE_DEGs_list$GeneSort$inputClass,
markers = top10_DEGs$Marker,
clusterGenes = FALSE,
averageCells = 1)
plotMarkerHeat(exp = SCORE_DAMs_list$GeneSort$inputMat,
classes = SCORE_DAMs_list$GeneSort$inputClass,
markers = top10_DAMs$Marker,
clusterGenes = FALSE,
averageCells = 1)
ident <- 'A549'
DEGs <- SCORE_DEGs_list$Markers[SCORE_DEGs_list$Markers$Cluster==ident,]$Marker
DAMs <- SCORE_DAMs_list$Markers[SCORE_DAMs_list$Markers$Cluster==ident,]$Marker
DAMGs <- unique(rownames(table(unlist(RCA_seurat@misc$geneSets[DAMs]))))
st_res <- PlotSteinertree(RCA_seurat, geneset1 = DEGs, geneset2 = DAMGs)
print(st_res$plot)
st_res <- cut_steiner_tree(st_res, k = 7)
en_res <- get_enrich_plot(st_res, group = 1)
help(enrichGO)
??enrichGO
library(clusterProfiler)
??enrichGO
help(enrichGO)
help("dotplot")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(RSCORE)
